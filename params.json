{"name":"Cirrlicht","tagline":"C Bindings of Irrlicht Engine","body":"[![Build Status](https://travis-ci.org/Artistic-Games/CIrrlicht.png?branch=master)](https://travis-ci.org/Artistic-Games/CIrrlicht)\r\n[![Stories in Ready](https://badge.waffle.io/Artistic-Games/CIrrlicht.png?label=ready&title=Ready)](https://waffle.io/Artistic-Games/CIrrlicht)\r\n\r\nCIrrlicht - C Bindings of Irrlicht Engine\r\n==========================================\r\n\r\nDetails\r\n-------\r\n\r\nCIrrlicht is the C Bindings/Interface of Irrlicht Engine which makes it possible to use Irrlicht Engine from C. The original intention of this software is to make Irrlicht cross-language by making it easy to bind Irrlicht Engine for those languages that directly support C but not C++ such as D, Haskell, Swift etc.\r\n\r\nIt is used as a backend for [DIrrlicht](https://github.com/Artistic-Games/DIrrlicht)\r\n\r\nStatus\r\n------\r\n\r\nIt's in very early beta stage. Several functions still aren't wrapped. It is subject to API changes.\r\n\r\nCheckout the [Road Map](https://github.com/Artistic-Games/CIrrlicht/wiki/Roadmap) for the list of things that still needs to be done.\r\n\r\nInstallation\r\n------------\r\n\r\nOn Windows open `Dependencies_Path.bat` in directory and change environment variable of `IRRLICHT_ROOT` to the directory of Irrlicht and run it, then do `make` / `make sharedlib` or `make staticlib` to create dynamic/static library.\r\n\r\nOn Linux, open Makefile and set `IrrlichtHome` to the root directory of Irrlicht and then do `make` / `make sharedlib` or `make staticlib` to create dynamic/static library.\r\n\r\nThe compiled library will be available in `lib/`.\r\n\r\nTo use a dynamic library on Linux:\r\n```\r\n$ make\r\n$ sudo make install\r\n```\r\n\r\nUsage\r\n-----\r\n\r\nCIrrlicht is based on Irrlicht which separates the interface from implementation, which means every method of base class must be implementated as separate functions instead of casting pointer to base class. Following is the short example that can be used to test CIrrlicht, it shows the simple window with a black background that can be minimized, resized and closed:\r\n\r\n--------------------------------------------\r\n```C\r\n#include <cirrlicht.h>\r\n\r\nint main() {\r\n    irr_dimension2du dim = {800, 600};\r\n    irr_IrrlichtDevice* device = irr_createDevice(EDT_OPENGL, dim);\r\n    \r\n    irr_IrrlichtDevice_setWindowCaption(device, L\"CIrrlicht Test!\");\r\n    irr_IrrlichtDevice_setResizable(device, true);\r\n    \r\n    irr_IVideoDriver* driver = irr_IrrlichtDevice_getVideoDriver(device);\r\n    while(irr_IrrlichtDevice_run(device)) {\r\n        irr_IVideoDriver_beginScene(driver);\r\n        irr_IVideoDriver_endScene(driver);\r\n    }\r\n    \r\n    irr_IrrlichtDevice_drop(device);\r\n}\r\n```\r\n\r\nSee [wiki](https://github.com/Artistic-Games/CIrrlicht/wiki/) for more usage and tutorials\r\n\r\nContributing\r\n------------\r\n\r\nCIrrlicht is currently being used as a backend for DIrrlicht, that means the quality of DIrrlicht is highly dependent on it. The priority is to make the library stable enough that don't break DIrrlicht. Feel free to open issues or send pull requests.\r\n\r\nBefore making a commit, please try to adhere to the [coding style](https://github.com/Artistic-Games/CIrrlicht/blob/master/CONTRIBUTING.md) of CIrrlicht.\r\n\r\nLicense\r\n-------\r\n\r\nIt is released under permissive zlib license same as Irrlicht Engine.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}